/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pacote;

import java.rmi.NotBoundException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.ExportException;
import java.rmi.server.UnicastRemoteObject;
import javax.swing.JOptionPane;

/**
 *
 * @author kemily
 */
public class ControlPanel extends javax.swing.JFrame {

    /**
     * Creates new form ControlPanel
     */
    
    Registry regWeb;
    Registry regDesktop;
    rmiWebInterface objRmiWeb;
    rmiDesktopInterface objRmiDesktop;
    
    
    public ControlPanel() {
        
        initComponents();
        setupCloseConfirmation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblWeb = new javax.swing.JLabel();
        labDesktop = new javax.swing.JLabel();
        btnTurnWeb = new javax.swing.JToggleButton();
        btnTurnDesktop = new javax.swing.JToggleButton();
        controlTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Control Panel");

        lblWeb.setText("Chat Web:");

        labDesktop.setText("Chat desktop:");

        btnTurnWeb.setText("Ativar");
        btnTurnWeb.setActionCommand("Off");
        btnTurnWeb.setMinimumSize(new java.awt.Dimension(96, 28));
        btnTurnWeb.setPreferredSize(new java.awt.Dimension(96, 28));
        btnTurnWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTurnWebActionPerformed(evt);
            }
        });

        btnTurnDesktop.setText("Ativar");
        btnTurnDesktop.setActionCommand("Off");
        btnTurnDesktop.setMinimumSize(new java.awt.Dimension(96, 28));
        btnTurnDesktop.setName(""); // NOI18N
        btnTurnDesktop.setPreferredSize(new java.awt.Dimension(96, 28));
        btnTurnDesktop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTurnDesktopActionPerformed(evt);
            }
        });

        controlTitle.setBackground(new java.awt.Color(51, 51, 51));
        controlTitle.setForeground(new java.awt.Color(0, 0, 0));
        controlTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        controlTitle.setText("Control Panel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWeb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTurnWeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labDesktop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(btnTurnDesktop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(73, 73, 73))
            .addComponent(controlTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(controlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWeb)
                    .addComponent(btnTurnWeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labDesktop)
                    .addComponent(btnTurnDesktop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(137, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTurnWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTurnWebActionPerformed

        if (btnTurnWeb.isSelected()) {
        try {
            
            try {
                this.regWeb = LocateRegistry.createRegistry(7777);
            } catch (ExportException e) {
                
                this.regWeb = LocateRegistry.getRegistry(7777);
            }
            
            
            this.objRmiWeb = new rmiWebImpl();
            this.regWeb.rebind("ServidorChatterWeb", objRmiWeb);
            
            JOptionPane.showMessageDialog(null, "Servidor iniciado");
            btnTurnWeb.setText("On");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ativando servidor RMI: " + e.getMessage());
            e.printStackTrace();
        }
    } else {
        stopServerWeb();
    }
    }//GEN-LAST:event_btnTurnWebActionPerformed

    private void stopServerWeb() {
        try {
            
            this.regWeb.unbind("ServidorChatterWeb");
            
            
            UnicastRemoteObject.unexportObject(this.objRmiWeb, true);
            //UnicastRemoteObject.unexportObject(reg, true);
            
            JOptionPane.showMessageDialog(null, "Servidor parado");
            btnTurnWeb.setText("Off");
        } catch (NotBoundException e) {
            JOptionPane.showMessageDialog(null, "Erro: Objeto não estava registrado no servidor RMI");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro parando o servidor: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    private void stopServerDesktop() {
        try {
            
            this.regDesktop.unbind("ServidorChatterDesktop");
            
            
            UnicastRemoteObject.unexportObject(this.objRmiDesktop, true);
            //UnicastRemoteObject.unexportObject(reg, true);
            
            JOptionPane.showMessageDialog(null, "Servidor parado");
            btnTurnDesktop.setText("Off");
        } catch (NotBoundException e) {
            JOptionPane.showMessageDialog(null, "Erro: Objeto não estava registrado no servidor RMI");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro parando o servidor: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    private void btnTurnDesktopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTurnDesktopActionPerformed
        if (btnTurnDesktop.isSelected()) {
        try {
            
            try {
                this.regDesktop = LocateRegistry.createRegistry(7775);
            } catch (ExportException e) {
                
                this.regDesktop = LocateRegistry.getRegistry(7775);
            }
            
            
            this.objRmiDesktop = new rmiDesktopImpl();
            this.regDesktop.rebind("ServidorChatterDesktop", objRmiDesktop);
            
            JOptionPane.showMessageDialog(null, "Servidor iniciado");
            btnTurnDesktop.setText("On");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ativando servidor RMI: " + e.getMessage());
            e.printStackTrace();
        }
    } else {
        stopServerDesktop();
    }
    }//GEN-LAST:event_btnTurnDesktopActionPerformed

    private void setupCloseConfirmation() {
        
    this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    this.addWindowListener(new java.awt.event.WindowAdapter() {
        
        @Override
        
        public void windowClosing(java.awt.event.WindowEvent e) {
            
            int confirm = JOptionPane.showConfirmDialog(
                    ControlPanel.this,
                    "Tem certeza de que deseja sair?\n" +
                    (btnTurnWeb.getText().equals("On") ? "O servidor será desligado!" : ""),
                    "Confirmação de Saída",
                    JOptionPane.YES_NO_OPTION);

            
            if (confirm == JOptionPane.YES_OPTION) {
                
                if (btnTurnWeb.getText().equals("On")) {
                    stopServerWeb();
                    stopServerDesktop();
                }
                
                dispose();
                System.exit(0); 
            }
        }
    });
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControlPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnTurnDesktop;
    private javax.swing.JToggleButton btnTurnWeb;
    private javax.swing.JLabel controlTitle;
    private javax.swing.JLabel labDesktop;
    private javax.swing.JLabel lblWeb;
    // End of variables declaration//GEN-END:variables
}
